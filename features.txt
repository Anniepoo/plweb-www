# SWI-Prolog's features

## Engine

    * *fast* compilation. E.g., loads 140,000 lines of code spread
    over 500 source files in 2.3 seconds on an AMD 5400+ system.

    * *Robust* and *|free of memory leaks|*.  In use for several
    servers that run 24x7 (including this web service).

    * *Small*. The full development environment, including graphics,
    libraries and many interface packages, requires approx. 40MB
    hard disk. The non-graphical kernel is about 650KB, the graphics
    library adds about 1.2MB to the image.

    * *Scales* well for large applications. No limits on program size,
    atom length, term arity or integer values. No performance
    degradation on predicates with many (indexed) facts.

    * *|Just-In-Time|* indexing of both static and dynamic code on any
    argument greatly simplifies handling multi-moded relations with
    many clauses.

    * *|Unbounded integer|* and *rational* number arithmetic
    based on [[GMP library][<gmp:>]].

    * The goodies: *modules* (upward compatible to Quintus and SICStus),
    *|garbage-collection|* (transparent to C/C++-code, including *atom*
    garbage collection), *|last-call|* optimisation, dynamic expansion
    of the runtime stacks, *|ISO exception-handling|* (including C/C++
    interface for catching and throwing exceptions).

    * *|attributed variables|*, coroutining (freeze/2, when/2, dif/2),
    global variables, cyclic terms.

    * Flag-controlled handling of *|occurs-check|* (false/true/error)
    see current_prolog_flag/2.

    * *UNICODE* character set handling internal. Ideal for web and
    international applications.

    * *|[[Multi-threading][</man/threads.html>]]|* support: run multiple
    pre-emptively scheduled prolog engines on the same database.

## Development tools

    * [[Source-level debugger][<gtrace.html>]] on all platforms that
    supports graphics through XPCE (Windows, Unix/Linux, MacOSX).

    * Execution *|profiler.txt|* (time and call statistics) for all
    major platforms (Windows, Linux, MacOSX).

    * *|[[Cross-Referencer][gxref.txt]]|*. gxref/0 provides a graphical
    front-end for the extensible Prolog cross-referencer (xref).

    * *|Literate programming|* support through
    *|[[PlDoc][</pldoc/package/pldoc.html>]]|*. Provides integrated view
    on manual and application documentation and producing LaTeX
    documentation for your application.

    * *|Unit testing|* support through
    *|[[PlUnit][</pldoc/package/plunit.html>]]|*.

## Compatibility

    * Comprehensive set of built-in predicates, covering *|Part 1 of the
    ISO standard|*, the de-facto *Edinburgh* Prolog standard and
    important parts of Quintus and SICStus Prolog. Fair
    compatibility to Ciao, YAP and GNU-Prolog.

## Libraries

    * *Constraint* Logic Programming, providing libraries for
    *|[[CHR][</man/chr.html>]]|* (Constraint Handling
    Rules), *|[[clp(FD)][</man/clpfd.html>]]|*,
    *|[[clp(R,Q)][</man/clpqr.html>]]|* and various others.

## Connectivity

    * Multi-threaded *|[[Web server][</pldoc/package/http.html>]]|*
    library with comprehensive libraries to generate HTML,
    HTTP authorization, session management, exchanging JSON (used by
    many AJAX widgets), etc.

    * Flexible and fast interface to the *|C-|* and *|C++-language|*.
    The interface allows for calling both ways, handling of
    non-determinism both ways and *embedding* of the SWI-Prolog kernel
    in C/C++ projects.

    * Bundled with interface libraries for
    *|[[Java][</packages/jpl/>]]|* (JPL),
    *|[[ODBC][</pldoc/package/odbc.html>]]|*, *|TCP/IP|* sockets,
    *|[[SSL][</pldoc/package/ssl.html>]]|*, *CGI* form handling, etc.
    Check the packages.

    * Fast and flexible libraries for *|[[parsing
    SGML/XML][</pldoc/package/sgml.html>]]|* (HTML),
    *|[[parsing][</pldoc/package/rdf2pl.html>]]|* *RDF*,
    *|[[store and query][</pldoc/package/semweb.html>]]|* the RDF
    _|triple model|_. A graphical editor for RDF/RDFS and OWL models
    called Triple20 is distributed separately.

## Portability

    * *Portable* to many platforms, including almost all *|Unix/Linux|*
    platforms, *Windows* (Vista, 7, 8, including *|64-bit|*
    editions), *|MacOS X|* (using X11 for graphics) and many more. Both
    32-bit and *|64-bit|* hardware is supported. Sources are plain
    C99, configured automatically using GNU autoconf (configure, make,
    make install).

    * Machine-independent *|saved-states|* (save on one platform, run
    using the virtual machine of another platform).

    * Regular *|binary distributions|* for Windows (32/64 bits) and
    MacOS X (64 bits)) and [PPAs for Ubuntu](https://launchpad.net/~swi-prolog/+archive/stable).

    * Regular distribution of the *full source* packages. The sources are
    also accessible through [[GIT][</git.html>]].

## Legal

    * Kernel licensed under the [[LGPL][<lgpl:>]]. Prolog libraries are
    distributed under the [[GPL][<gpl:>]] with an additional statement
    that allows for use in proprietary applications. Details can be
    found on the license.txt page.

